/*
    This question is also popular as "Circular Tour"
    Company Tags  : Amazon, Uber, Microsoft
    Leetcode Link : https://leetcode.com/problems/gas-station/
*/

class Solution {
public:
    int greedy(vector<int>& gas, vector<int>& cost) {
        int n = gas.size();
        int sum = 0;
        
        for(int i = 0; i<n; i++) {
            sum += gas[i] - cost[i];
        }
        
        if(sum < 0)
            return -1;
        int index = 0;
        int tank = 0;
        for(int i = 0; i<n; i++) {
            tank += gas[i] - cost[i];
            
            if(tank < 0) {
                index = i+1;
                tank = 0;
            }
        }
        
        return index;
    }
    int bruteForce(vector<int>& gas, vector<int>& cost) {
        int n = gas.size();

        for(int i = 0; i<n; i++) {
            if(gas[i] < cost[i])
                continue;
            int j = (i+1)%n;
            int currGas = gas[i] - cost[i] + gas[j];
            while(j != i) {
                if(currGas < cost[j])
                    break;
                int prevCost = cost[j];
                j = (j+1)%n;
                currGas = currGas - prevCost + gas[j];
            }
            if(i == j)
                return i;
        }
        return -1;
    }
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        return bruteForce(gas, cost);
        //return greedy(gas, cost);
    }
};
