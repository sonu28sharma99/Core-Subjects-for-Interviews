/*
    Company Tags  : Accolite, Adobe, Amazon, D-E-Shaw, MakeMyTrip, Microsoft, Payu
    Leetcode Link : https://leetcode.com/problems/trapping-rain-water/
*/

class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        stack<int> st;
        
        int water = 0;
        
        for(int i = 0; i<n; i++) {
            //This is actually the concept of monotonic stack
            while(!st.empty() && height[i] > height[st.top()]) {
                //It means index is bounded from left (i.e. height[st.top()]) and right(i.e. height[i])
                int index = st.top();
                st.pop();
                
                //This index can't contribute any more 
                //(Example : [4,2,0,3,2,5]), we will be left with empty stack at end
                //while processing 5
                if(st.empty())
                    break;
                
                int h = min(height[i], height[st.top()]) - height[index];
                int w = i - st.top() - 1; //same concept as simplfied MAH
                
                water += h*w;
            }
            st.push(i);
        }
        return water;
    }
};
